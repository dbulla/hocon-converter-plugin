<idea-plugin>
    <name>HOCON Converter</name>
    <id>HOCON Converter</id>
    <vendor email="dbullard@nurflugel.com" url="https://github.com/dbulla/hocon-converter-plugin">
        Nurlfugel.com
    </vendor>
    <!--    <version>1.0</version>-->
    <depends>com.intellij.modules.lang</depends>
    <change-notes>Release to fix major bug in consecutive maps not flushing the previous key path</change-notes>

    <extensions defaultExtensionNs="com.intellij">
        <projectConfigurable displayName="HOCON Converter" instance="com.nurflugel.hocon.cofig.ui.ProjectSettingsPage"/>
    </extensions>
    <!--<helpset file="myhelp.jar" path="/Help.hs" />-->

    <!--What's a valid value for this?-->
    <idea-version since-build="162"/>

    <actions>
        <group>
            <action id="hocon.convertToProperty"
                    class="com.nurflugel.hocon.HoconConvertToPropertiesAction"
                    text="HOCON -> Properties"
                    description="Convert to properties HOCON format">
                <keyboard-shortcut keymap="$default" first-keystroke="ctrl alt shift p"/>
            </action>
            <action id="hocon.convertToConf"
                    class="com.nurflugel.hocon.HoconConvertToConfAction"
                    text="HOCON -> Map"
                    description="Convert to map-HOCON format">
                <keyboard-shortcut keymap="$default" first-keystroke="ctrl alt shift c"/>
            </action>
            <add-to-group group-id="EditMenu" anchor="last"/>
        </group>
    </actions>


    <description><![CDATA[

Convert between HOCON map form, and HOCON properties form.<p>

This is a plugin for Intellij IDEA which converts HOCON back and forth between map-like and property-like formats. <br>
This can be really useful when you need to change Spring property keys (which are resolved like <br>
<pre>
    "${aaa.bbb.ccc.ddd}"<br>
</pre>
and your files are in .conf format, like<br>
<pre>
    aaa {
      bbb {
        ccc {
          ddd = "some value"
        }
      }
    }
</pre>
<p>

Simply convert the .conf-style file into property-style, then you can search/replace<p>

<b>Features completed</b>
<ul>
    <li>read in basic properties-formatted file with simple key/value pairs</li>
    <li>read in basic conf-formatted file wiht simple key/value pairs & maps</li>
    <li>Keep "include" at top of file (in order)</li>
    <li>Top-level lists, like this:</li>
    <pre>
cors = [
  "xxxx",
  "yyyy"
]
</pre>
</ul>
<b>What's <em>NOT</em> working</b>
<ul>
    <li>Comments</li>
    <li>Lists inside maps or other lists (only top-level lists are working currently)</li>
</ul>


<b>Planned features</b>
<ul>
    <li>Tie comments to line that follows (currently comments are lost)</li>
    <li>Auto-detection of if the text is from a .yml file - if so, then it needs to be indented after the `app |-`
        line
    </li>
    <li>If a map has only a single key/value, then don't display it in map format in conf output, use key/value
        output.<br>
        For example:
    </li>
</ul>
<pre>
aaa.bbb.ccc = 5
</pre>
instead of
<pre>
aaa {
  bbb {
    ccc = 5
  }
}
</pre>

<b>Release History</b>
<ul>
    <li>0.2.1 Bug fix - deal with flattened keys, like <br>
        <pre>
aaa.bbb {
  ddd.eee = 5
}</pre>
    </li>
</ul>

    ]]></description>
    <change-notes><![CDATA[
<p>0.2.1 </p>
<ul>
    <li>Bug fix - deal with parsing partially flattened keys, like
        <pre>
aaa.bbb {
ddd.eee = 5
}</pre>
    </li>
</ul>
<p>0.1.0</p>
<ul>
    <li>Initial release</li>
</ul>
   ]]></change-notes>

</idea-plugin>
